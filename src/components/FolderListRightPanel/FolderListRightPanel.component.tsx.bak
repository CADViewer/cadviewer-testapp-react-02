import { Fragment, useState, useEffect, useCallback } from "react";
import { Dialog, Transition } from "@headlessui/react";
import * as cadviewer from "cadviewer";
import useConfig from "../../demos/hooks/useConfig";
import TreeView from "../TreeView";
import { flattenTree } from "../TreeView/utils";

interface FileFolder {
	name: string;
	path: string;
	size: number;
	created: string;
	modified: string;
	children?: FileFolder[];
}

interface FileFolderList extends Array<FileFolder> {}

interface FolderListRightPanelProps {
	rightFolderPanelOpen: boolean;
	setRightFolderPanelOpen: any;
}

const FolderListRightPanel = ({
	rightFolderPanelOpen,
	setRightFolderPanelOpen,
}: FolderListRightPanelProps) => {
  const { config } = useConfig();
	let { ServerBackEndUrl } = config;

	const [folderStructure, setFolderStructure] = useState<FileFolderList>([]);
	const [error, setError] = useState<string | null>(null);

	const fetchFolderStructure = useCallback(async () => {
		try {
			const response = await fetch(ServerBackEndUrl + "listdwgdirectory");
			if (!response.ok) {
				throw new Error("Network response was not ok");
			}
			const data = await response.json();
			setFolderStructure(data);
			setError(null);
		} catch (error: any) {
			setError(error.message);
		}
	}, [ServerBackEndUrl]);

	useEffect(() => {
		fetchFolderStructure();
	}, [fetchFolderStructure, rightFolderPanelOpen]);

	return (
		<div>
			<Transition.Root show={rightFolderPanelOpen} as={Fragment}>
				<Dialog
					as="div"
					className="relative z-10"
					style={{ zIndex: 10000000 }}
					onClose={setRightFolderPanelOpen}
				>
					<Transition.Child
						as={Fragment}
						enter="ease-in-out duration-500"
						enterFrom="opacity-0"
						enterTo="opacity-100"
						leave="ease-in-out duration-500"
						leaveFrom="opacity-100"
						leaveTo="opacity-0"
					>
						<div className="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" />
					</Transition.Child>

					<div
						className="fixed inset-0 overflow-hidden"
						style={{ zIndex: 10000001 }}
					>
						<div className="absolute inset-0 overflow-hidden">
							<div className="pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10">
								<Transition.Child
									as={Fragment}
									enter="transform transition ease-in-out duration-500 sm:duration-700"
									enterFrom="translate-x-full"
									enterTo="translate-x-0"
									leave="transform transition ease-in-out duration-500 sm:duration-700"
									leaveFrom="translate-x-0"
									leaveTo="translate-x-full"
								>
									<Dialog.Panel
										className="pointer-events-auto relative w-96"
										style={{ width: 600, maxWidth: "100%" }}
									>
										<Transition.Child
											as={Fragment}
											enter="ease-in-out duration-500"
											enterFrom="opacity-0"
											enterTo="opacity-100"
											leave="ease-in-out duration-500"
											leaveFrom="opacity-100"
											leaveTo="opacity-0"
										>
											<div className="absolute left-0 top-0 -ml-8 flex pr-2 pt-4 sm:-ml-10 sm:pr-4">
												<button
													type="button"
													className="relative rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white"
													onClick={() => setRightFolderPanelOpen(false)}
												>
													<span className="absolute -inset-2.5" />
													<span className="sr-only">Close panel</span>
													<svg
														xmlns="http://www.w3.org/2000/svg"
														fill="none"
														viewBox="0 0 24 24"
														strokeWidth={1.5}
														stroke="currentColor"
														className="w-6 h-6"
													>
														<path
															strokeLinecap="round"
															strokeLinejoin="round"
															d="M6 18L18 6M6 6l12 12"
														/>
													</svg>
												</button>
											</div>
										</Transition.Child>
										<div className="flex h-full flex-col overflow-y-scroll bg-white shadow-xl">
											<div className="bg-primary-700 px-4 py-6 sm:px-6">
												<div className="flex items-center justify-between">
													<Dialog.Title className="text-base font-semibold leading-6 text-white">
													Folder Structure
													</Dialog.Title>
												</div>
												<div className="mt-1">
													<p className="text-sm text-primary-300">
														Drill down to select file
													</p>
												</div>
											</div>
											<div className="relative flex-1 px-4 py-6 sm:px-6">
												{error && <p>Error: {error}</p>}
												<FolderList folders={folderStructure} closePanel={() => setRightFolderPanelOpen(false)} />
											</div>
										</div>
									</Dialog.Panel>
								</Transition.Child>
							</div>
						</div>
					</div>
				</Dialog>
			</Transition.Root>
		</div>
	);
};

const FolderList = ({ folders,  closePanel }: { folders: FileFolderList, closePanel: () => void }) => {
	const folder = {
		name: "",
		children: folders.map((folder) => ({
			name: folder.name,
			path: folder.path,
			children: folder.children,
		})),
	};

	const data = flattenTree(folder);

	
	const openPathInCadViewer = useCallback((path: string) => {
		const availableExtensions = ["pdf", "tif", "tiff", "dxf", "dwf", "dwl", "dwl2", "dwg", "acad", "dgn", "png", "jpeg", "jpg", "gif", "svg"];
		const extension = path.slice(path.lastIndexOf(".") + 1);
		if (availableExtensions.includes(extension)) {
			// Open file in CadViewer
			console.log("Open file in CadViewer");
			cadviewer.cvjs_LoadDrawing("floorPlan", path);
			closePanel()
		}
	}, [closePanel]);

	return (
		<div>
			<div className="directory">
				<TreeView
				data={data}
				onSelect={(node) => {
					if (node.isSelected && !node.isBranch && node.element.metadata?.path){
						openPathInCadViewer((node.element.metadata?.path || "") as string);
					}
				}}
				aria-label="directory tree"
				nodeRenderer={({
					element,
					isBranch,
					isExpanded,
					getNodeProps,
					level,
				}) => (
					<div {...getNodeProps()} /*onClick={() => {
							if(isBranch){
								console.log(`Folder '${element.name}' clicked`);
							} else {
								console.log(`File '${element.name}' clicked`);
							}
						}}*/ className="flex items-center text-xl cursor-pointer my-1 w-full" style={{ paddingLeft: 20 * (level - 1) }}>
						{isBranch ? (
							<FolderIcon isOpen={isExpanded} />
						) : (
							<FileIcon filename={element.name} />
						)}
						<span className="w-full text-xl">{element.name}</span>
						{
							!isBranch && (
								<button onClick={(e) => {
									e.preventDefault();
								}} className="relative cursor-default rounded-lg bg-white py-2 pl-3 ml-5 text-left focus:outline-none focus-visible:border-indigo-500 focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-opacity-75 focus-visible:ring-offset-2 focus-visible:ring-offset-primary-300 sm:text-sm">
									<svg
										xmlns="http://www.w3.org/2000/svg"
										fill="none"
										viewBox="0 0 24 24"
										strokeWidth={1.5}
										stroke="currentColor"
										className="w-6 h-6"
									>
										<path
											strokeLinecap="round"
											strokeLinejoin="round"
											d="M12 6.75a.75.75 0 110-1.5.75.75 0 010 1.5zM12 12.75a.75.75 0 110-1.5.75.75 0 010 1.5zM12 18.75a.75.75 0 110-1.5.75.75 0 010 1.5z"
										/>
									</svg>
								</button>
							)
						}
					</div>
				)}
				/>
			</div>
		</div>
	);
};

const FolderIcon = ({ isOpen }: { isOpen: boolean }) =>
//   isOpen ? (
	<svg className="w-8 h-8 mr-1" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="#e8a87c" d="M19 20H4a2 2 0 0 1-2-2V6c0-1.11.89-2 2-2h6l2 2h7a2 2 0 0 1 2 2H4v10l2.14-8h17.07l-2.28 8.5c-.23.87-1.01 1.5-1.93 1.5Z"/></svg>
//   ) : (
// 	<svg className="w-6 h-6" xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#e8a87c" d="M448 480H64c-35.3 0-64-28.7-64-64V192h512v224c0 35.3-28.7 64-64 64zm64-320H0V96c0-35.3 28.7-64 64-64h128c20.1 0 39.1 9.5 51.2 25.6l19.2 25.6c6 8.1 15.5 12.8 25.6 12.8h160c35.3 0 64 28.7 64 64z"/></svg>
//   );

const FileIcon = ({ filename }: {filename: string}) => {
  const extension = filename.slice(filename.lastIndexOf(".") + 1);
  switch (extension) {
    case "js":
		return (
			<svg className="w-8 h-8 mr-1" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><path fill="#f0dc4e" d="M2 2v28h28V2zm15.238 21.837c0 2.725-1.6 3.969-3.931 3.969c-2.106 0-3.325-1.087-3.95-2.406l2.144-1.294c.413.731.788 1.35 1.694 1.35c.862 0 1.412-.338 1.412-1.656v-8.944h2.631zm6.224 3.969c-2.444 0-4.025-1.162-4.794-2.688l2.144-1.237c.563.919 1.3 1.6 2.594 1.6c1.087 0 1.788-.544 1.788-1.3c0-.9-.713-1.219-1.919-1.75l-.656-.281c-1.9-.806-3.156-1.825-3.156-3.969c0-1.975 1.506-3.475 3.85-3.475c1.675 0 2.875.581 3.738 2.106l-2.05 1.313c-.45-.806-.938-1.125-1.694-1.125c-.768 0-1.256.488-1.256 1.125c0 .788.488 1.106 1.619 1.6l.656.281c2.238.956 3.494 1.938 3.494 4.137c0 2.363-1.863 3.662-4.357 3.662z"/></svg>
		);
    case "css":
		return (
			<svg className="w-8 h-8 mr-1" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="#2465f2" d="M4.192 3.143h15.615l-1.42 16.034l-6.404 1.812l-6.369-1.813L4.192 3.143zM16.9 6.424l-9.8-.002l.158 1.949l7.529.002l-.189 2.02H9.66l.179 1.913h4.597l-.272 2.62l-2.164.598l-2.197-.603l-.141-1.569h-1.94l.216 2.867L12 17.484l3.995-1.137l.905-9.923z"/></svg>
		);
    case "json":
		return (
			<svg className="w-8 h-8 mr-1" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="#393939" d="M12.043 23.968c.479-.004.953-.029 1.426-.094a11.805 11.805 0 0 0 3.146-.863a12.404 12.404 0 0 0 3.793-2.542a11.977 11.977 0 0 0 2.44-3.427a11.794 11.794 0 0 0 1.02-3.476c.149-1.16.135-2.346-.045-3.499a11.96 11.96 0 0 0-.793-2.788a11.197 11.197 0 0 0-.854-1.617c-1.168-1.837-2.861-3.314-4.81-4.3a12.835 12.835 0 0 0-2.172-.87h-.005c.119.063.24.132.345.201c.12.074.239.146.351.225a8.93 8.93 0 0 1 1.559 1.33c1.063 1.145 1.797 2.548 2.218 4.041c.284.982.434 1.998.495 3.017c.044.743.044 1.491-.047 2.229c-.149 1.27-.554 2.51-1.228 3.596a7.475 7.475 0 0 1-1.903 2.084c-1.244.928-2.877 1.482-4.436 1.114a3.916 3.916 0 0 1-.748-.258a4.692 4.692 0 0 1-.779-.45a6.08 6.08 0 0 1-1.244-1.105a6.507 6.507 0 0 1-1.049-1.747a7.366 7.366 0 0 1-.494-2.54c-.03-1.273.225-2.553.854-3.67a6.43 6.43 0 0 1 1.663-1.918c.225-.178.464-.333.704-.479l.016-.007a5.121 5.121 0 0 0-1.441-.12a4.963 4.963 0 0 0-1.228.24c-.359.12-.704.27-1.019.45a6.146 6.146 0 0 0-.733.494c-.211.18-.42.36-.615.555c-1.123 1.153-1.768 2.682-2.022 4.256c-.15.973-.15 1.96-.091 2.95c.105 1.395.391 2.787.945 4.062a8.518 8.518 0 0 0 1.348 2.173a8.14 8.14 0 0 0 3.132 2.23a7.934 7.934 0 0 0 2.113.54c.074.015.149.015.209.015zm-2.934-.398a4.102 4.102 0 0 1-.45-.228a8.5 8.5 0 0 1-2.038-1.534c-1.094-1.137-1.827-2.566-2.247-4.08a15.184 15.184 0 0 1-.495-3.172a12.14 12.14 0 0 1 .046-2.082c.135-1.257.495-2.501 1.124-3.58a6.889 6.889 0 0 1 1.783-2.053a6.23 6.23 0 0 1 1.633-.9a5.363 5.363 0 0 1 3.522-.045c.029 0 .029 0 .045.03c.015.015.045.015.06.03c.045.016.104.045.165.074c.239.12.479.271.704.42a6.294 6.294 0 0 1 2.097 2.502c.42.914.615 1.934.631 2.938c.014 1.079-.18 2.157-.645 3.146a6.42 6.42 0 0 1-2.638 2.832c.09.03.18.045.271.075c.225.044.449.074.688.074c1.468.045 2.892-.66 3.94-1.647c.195-.18.375-.375.54-.585c.225-.27.435-.54.614-.823c.239-.375.435-.75.614-1.154a8.112 8.112 0 0 0 .509-1.664c.196-1.004.211-2.022.149-3.026c-.135-2.022-.673-4.045-1.842-5.724a9.054 9.054 0 0 0-.555-.719a9.868 9.868 0 0 0-1.063-1.034a8.477 8.477 0 0 0-1.363-.915a9.927 9.927 0 0 0-1.692-.598l-.3-.06c-.209-.03-.42-.044-.634-.06a8.453 8.453 0 0 0-1.015.016c-.704.045-1.412.16-2.112.337C5.799 1.227 2.863 3.566 1.3 6.67A11.834 11.834 0 0 0 .238 9.801a11.81 11.81 0 0 0-.104 3.775c.12 1.02.374 2.023.778 2.977c.227.57.511 1.124.825 1.648c1.094 1.783 2.683 3.236 4.51 4.24c.688.39 1.408.69 2.157.944c.226.074.45.15.689.21z"/></svg>
		);
	case "pdf":
		return (
			<svg className="w-8 h-8 mr-1" xmlns="http://www.w3.org/2000/svg" width="1024" height="1024" viewBox="0 0 1024 1024"><path fill="#b51310" d="M854.6 288.7c6 6 9.4 14.1 9.4 22.6V928c0 17.7-14.3 32-32 32H192c-17.7 0-32-14.3-32-32V96c0-17.7 14.3-32 32-32h424.7c8.5 0 16.7 3.4 22.7 9.4l215.2 215.3zM790.2 326L602 137.8V326h188.2zM633.22 637.26c-15.18-.5-31.32.67-49.65 2.96c-24.3-14.99-40.66-35.58-52.28-65.83l1.07-4.38l1.24-5.18c4.3-18.13 6.61-31.36 7.3-44.7c.52-10.07-.04-19.36-1.83-27.97c-3.3-18.59-16.45-29.46-33.02-30.13c-15.45-.63-29.65 8-33.28 21.37c-5.91 21.62-2.45 50.07 10.08 98.59c-15.96 38.05-37.05 82.66-51.2 107.54c-18.89 9.74-33.6 18.6-45.96 28.42c-16.3 12.97-26.48 26.3-29.28 40.3c-1.36 6.49.69 14.97 5.36 21.92c5.3 7.88 13.28 13 22.85 13.74c24.15 1.87 53.83-23.03 86.6-79.26c3.29-1.1 6.77-2.26 11.02-3.7l11.9-4.02c7.53-2.54 12.99-4.36 18.39-6.11c23.4-7.62 41.1-12.43 57.2-15.17c27.98 14.98 60.32 24.8 82.1 24.8c17.98 0 30.13-9.32 34.52-23.99c3.85-12.88.8-27.82-7.48-36.08c-8.56-8.41-24.3-12.43-45.65-13.12zM385.23 765.68v-.36l.13-.34a54.86 54.86 0 0 1 5.6-10.76c4.28-6.58 10.17-13.5 17.47-20.87c3.92-3.95 8-7.8 12.79-12.12c1.07-.96 7.91-7.05 9.19-8.25l11.17-10.4l-8.12 12.93c-12.32 19.64-23.46 33.78-33 43c-3.51 3.4-6.6 5.9-9.1 7.51a16.43 16.43 0 0 1-2.61 1.42c-.41.17-.77.27-1.13.3a2.2 2.2 0 0 1-1.12-.15a2.07 2.07 0 0 1-1.27-1.91zM511.17 547.4l-2.26 4l-1.4-4.38c-3.1-9.83-5.38-24.64-6.01-38c-.72-15.2.49-24.32 5.29-24.32c6.74 0 9.83 10.8 10.07 27.05c.22 14.28-2.03 29.14-5.7 35.65zm-5.81 58.46l1.53-4.05l2.09 3.8c11.69 21.24 26.86 38.96 43.54 51.31l3.6 2.66l-4.39.9c-16.33 3.38-31.54 8.46-52.34 16.85c2.17-.88-21.62 8.86-27.64 11.17l-5.25 2.01l2.8-4.88c12.35-21.5 23.76-47.32 36.05-79.77zm157.62 76.26c-7.86 3.1-24.78.33-54.57-12.39l-7.56-3.22l8.2-.6c23.3-1.73 39.8-.45 49.42 3.07c4.1 1.5 6.83 3.39 8.04 5.55a4.64 4.64 0 0 1-1.36 6.31a6.7 6.7 0 0 1-2.17 1.28z"/></svg>
		);
	case "dwg": 
		return (
			<svg className="w-8 h-8 mr-1" xmlns="http://www.w3.org/2000/svg" width="256" height="256" viewBox="0 0 256 256"><g fill="none"><rect width="256" height="256" fill="#F4F2ED" rx="60"/><path fill="#BF2223" d="M105.96 27.024L148.381 27c9.611 16.923 17.714 34.758 24.624 53.057c2.764 6.798 5.557 13.597 7.799 20.609c3.356 10.271 7.587 20.204 10.796 30.534c6.304 21.742 11.874 43.713 17.473 65.661c2.088 8.741 4.979 17.239 6.861 26.032c-2.968 1.007-5.951 1.979-8.913 3.016c-3.328 1.104-6.861.993-10.309 1.302c-4.936.501-9.893.824-14.836 1.266l-11.903-8.564c-.543-3.952-.458-7.991-1.171-11.927c-2.023-12.619-5.197-25.009-8.807-37.23l-66.185 9.587c-.494 2.774-1.008 5.555-1.51 8.336c-2.213 9.859-1.656 20.072-2.249 30.115l-15.118 9.735c-.973.779-2.242.352-3.35.338c-3.737-.39-7.495-.375-11.218-.846c-3.794-.493-7.856.213-11.403-1.582c-2.968-1.442-6.029-2.678-8.962-4.201c3.378-16.754 7.87-33.242 12.248-49.738c5.409-20.58 11.882-40.836 18.546-61.003c9.336-29.152 21.197-57.42 35.166-84.475v.002Zm18.383 59.397c-5.507 16.673-11.882 33.007-17.777 49.533l35.201-20.234c-3.427-9.97-6.882-19.925-10.507-29.814c-.69-1.67-1.382-3.826-3.286-4.297c-2.263.28-2.926 2.936-3.631 4.812Z"/></g></svg>
		)
	case "tif":
		return (
			<svg className="w-8 h-8 mr-1" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><path fill="#a3d0a9" fill-rule="evenodd" d="M14 4.5V14a2 2 0 0 1-2 2h-1v-1h1a1 1 0 0 0 1-1V4.5h-2A1.5 1.5 0 0 1 9.5 3V1H4a1 1 0 0 0-1 1v9H2V2a2 2 0 0 1 2-2h5.5L14 4.5ZM1.928 12.512v3.337h-.794v-3.337H0v-.662h3.064v.662H1.928Zm2.131-.662v3.999h-.79V11.85h.79Zm1.373 3.999v-1.59h1.606v-.64H5.432v-1.116H7.19v-.653H4.641v3.999h.791Zm2.868-1.59v1.59h-.791V11.85h2.548v.653H8.3v1.117h1.605v.638H8.3Z"/></svg>
		);
	case "svg": 
		return (
			<svg className="w-8 h-8 mr-1" xmlns="http://www.w3.org/2000/svg" width="256" height="256" viewBox="0 0 256 256"><g fill="none"><rect width="256" height="256" fill="#F4F2ED" rx="60"/><path fill="#000" d="M17 120h220.641v73.109c0 17.18-14.036 30.336-32.356 30.336H49.355C31.032 223.445 17 210.289 17 193.109V120Z"/><path fill="#FFB13B" stroke="#000" strokeWidth="28.695" d="M61.633 108.908c-6.824-6.402-17.89-6.402-24.715 0c-6.824 6.399-6.824 16.774 0 23.176c6.824 6.398 17.89 6.398 24.715 0h131.215c6.828 6.398 17.89 6.398 24.718 0c6.825-6.402 6.825-16.777 0-23.176c-6.828-6.402-17.89-6.402-24.718 0H61.633Z"/><path fill="#FFB13B" stroke="#000" strokeWidth="28.725" d="M89.59 68.803c0-9.055-7.824-16.39-17.477-16.39c-9.656 0-17.48 7.335-17.48 16.39c0 9.05 7.824 16.386 17.48 16.386l92.782 87c0 9.051 7.824 16.387 17.476 16.387s17.477-7.336 17.477-16.387c0-9.05-7.825-16.386-17.477-16.386l-92.781-87Z"/><path fill="#FFB13B" stroke="#000" stroke-width="28.695" d="M139.602 58.978c6.824-6.402 6.824-16.777 0-23.18c-6.829-6.398-17.895-6.398-24.719 0c-6.824 6.403-6.824 16.778 0 23.18v123.036c-6.824 6.398-6.824 16.777 0 23.175c6.824 6.403 17.89 6.403 24.719 0c6.824-6.398 6.824-16.777 0-23.175V58.978Z"/><path fill="#FFB13B" stroke="#000" stroke-width="28.725" d="M182.371 85.19c9.652 0 17.477-7.336 17.477-16.387c0-9.055-7.825-16.39-17.477-16.39c-9.652 0-17.476 7.335-17.476 16.39l-92.782 87c-9.656 0-17.48 7.336-17.48 16.386c0 9.051 7.824 16.387 17.48 16.387c9.653 0 17.477-7.336 17.477-16.387l92.781-87Z"/><path fill="#FFB13B" d="M61.633 108.908c-6.824-6.402-17.89-6.402-24.715 0c-6.824 6.399-6.824 16.774 0 23.176c6.824 6.398 17.89 6.398 24.715 0h131.215c6.828 6.398 17.89 6.398 24.718 0c6.825-6.402 6.825-16.777 0-23.176c-6.828-6.402-17.89-6.402-24.718 0H61.633Z"/><path fill="#FFB13B" d="M89.59 68.803c0-9.055-7.824-16.39-17.477-16.39c-9.656 0-17.48 7.335-17.48 16.39c0 9.05 7.824 16.386 17.48 16.386l92.782 87c0 9.051 7.824 16.387 17.476 16.387s17.477-7.336 17.477-16.387c0-9.05-7.825-16.386-17.477-16.386l-92.781-87Z"/><path fill="#FFB13B" d="M139.602 58.978c6.824-6.402 6.824-16.777 0-23.18c-6.829-6.398-17.895-6.398-24.719 0c-6.824 6.403-6.824 16.778 0 23.18v123.036c-6.824 6.398-6.824 16.777 0 23.175c6.824 6.403 17.89 6.403 24.719 0c6.824-6.398 6.824-16.777 0-23.175V58.978Z"/><path fill="#FFB13B" d="M182.371 85.19c9.652 0 17.477-7.337 17.477-16.387c0-9.055-7.825-16.39-17.477-16.39c-9.652 0-17.476 7.335-17.476 16.39l-92.782 87c-9.656 0-17.48 7.336-17.48 16.386c0 9.051 7.824 16.387 17.48 16.387c9.653 0 17.477-7.336 17.477-16.387l92.781-87Z"/><path fill="#000" fill-opacity=".9" d="M17 121h220.641v73.109c0 17.18-14.036 30.336-32.356 30.336H49.355C31.032 224.445 17 211.289 17 194.109V121Z"/><path fill="#fff" d="M50.027 172.135c-5.175-4.852-8.379-11.551-8.379-18.949c0-14.805 12.809-26.809 28.59-26.809c15.79 0 28.594 12.004 28.594 26.809H82.086c0-6.133-5.309-11.102-11.848-11.102c-6.539 0-11.84 4.969-11.84 11.102c0 3.062 1.329 5.839 3.461 7.839h.008c2.145 2.02 3.93 2.602 8.371 3.266c7.899.77 15.043 3 20.219 7.852c5.176 4.855 8.375 11.554 8.375 18.953c0 14.804-12.805 26.812-28.594 26.812c-15.781 0-28.59-12.008-28.59-26.812h16.75c0 6.133 5.301 11.109 11.84 11.109c6.54 0 11.848-4.976 11.848-11.109c0-3.063-1.324-5.832-3.461-7.84h-.008c-2.144-2.012-5.223-2.703-8.379-3.258v-.004c-7.656-1.101-15.035-3.004-20.21-7.859Zm105.989-45.758l-20.227 91.531h-16.746l-20.211-91.531h16.75l11.852 53.609l11.832-53.609h16.75Zm28.597 37.914h28.586v26.805h.008c0 14.808-12.805 26.816-28.594 26.816c-15.793 0-28.59-12.008-28.59-26.816v-37.91h-.007c0-14.805 12.804-26.805 28.597-26.805c15.782 0 28.586 12 28.586 26.805h-16.746c0-6.125-5.308-11.102-11.84-11.102c-6.543 0-11.843 4.977-11.843 11.102v37.91c0 6.133 5.3 11.105 11.843 11.105c6.532 0 11.832-4.972 11.84-11.097v-11.102h-11.84v-15.711Z"/></g></svg>
		);
    default:
		return (
			<svg className="w-8 h-8 mr-1" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><g fill="none" strokeLinecap="round" strokeLinejoin="round" strokeWidth="2"><path d="M0 0h24v24H0z"/><path fill="currentColor" d="m12 2l.117.007a1 1 0 0 1 .876.876L13 3v4l.005.15a2 2 0 0 0 1.838 1.844L15 9h4l.117.007a1 1 0 0 1 .876.876L20 10v9a3 3 0 0 1-2.824 2.995L17 22H7a3 3 0 0 1-2.995-2.824L4 19V5a3 3 0 0 1 2.824-2.995L7 2h5z"/><path fill="#5b5959" d="M19 7h-4l-.001-4.001z"/></g></svg>
		);
  }
};
export default FolderListRightPanel;
